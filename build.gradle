// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config.
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply from: 'gradle/scripts/dependencies.gradle'
apply from: 'gradle/scripts/artifacts.gradle'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "ForgeFS"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        /*
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        */
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = "${config.mc_version}-${config.mod_version}"

if (System.getenv('TRAVIS_BUILD_NUMBER') != null) {
    version += "-build-" + System.getenv('TRAVIS_BUILD_NUMBER')
}

group = "${config.mo_group}"
archivesBaseName = "${config.mo_base_name}"

minecraft {
    version = config.mc_version + "-" + config.forge_version
    runDir = "run"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
